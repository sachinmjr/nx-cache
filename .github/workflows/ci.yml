name: CI - Build Affected Packages

on:
  pull_request:
    types: [labeled, opened, synchronize, reopened]
  push:
    branches: [main]

jobs:
  build-affected:
    # Only run when 'release' label is present or on main branch push
    if: ${{ contains(github.event.pull_request.labels.*.name, 'release') || github.ref == 'refs/heads/main' }}
    
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [22]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full git history for affected calculations
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache Nx
        uses: actions/cache@v4
        with:
          path: |
            .nx/cache
            .nx/workspace-data
          key: ${{ runner.os }}-nx-${{ hashFiles('**/package-lock.json', 'nx.json', 'workspace.json', '**/project.json') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Cache TypeScript builds
        uses: actions/cache@v4
        with:
          path: |
            dist
            **/tsconfig.tsbuildinfo
          key: ${{ runner.os }}-tsc-${{ hashFiles('**/tsconfig*.json', '**/package.json', '**/project.json') }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-tsc-${{ hashFiles('**/tsconfig*.json', '**/package.json', '**/project.json') }}-
            ${{ runner.os }}-tsc-

      - name: Install dependencies
        run: npm ci

      - name: Set up Nx base and head for affected calculation
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "NX_BASE=origin/${{ github.base_ref }}" >> $GITHUB_ENV
            echo "NX_HEAD=HEAD" >> $GITHUB_ENV
          else
            echo "NX_BASE=HEAD~1" >> $GITHUB_ENV
            echo "NX_HEAD=HEAD" >> $GITHUB_ENV
          fi

      - name: Show affected projects
        run: |
          echo "Base: $NX_BASE"
          echo "Head: $NX_HEAD"
          echo "Affected projects:"
          npx nx show projects --affected --base=$NX_BASE --head=$NX_HEAD
          echo "Dependency graph:"
          npx nx graph --affected --base=$NX_BASE --head=$NX_HEAD --file=affected-graph.json

      - name: Build affected projects
        run: |
          echo "Building affected projects with dependencies..."
          npx nx affected:build --base=$NX_BASE --head=$NX_HEAD --parallel=3 --verbose